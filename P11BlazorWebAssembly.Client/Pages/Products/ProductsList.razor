@page "/products/productslist"

@inject IProductService ProductService
@inject NavigationManager NavigationManager

<h3>ProductsList</h3>

@if (products == null)
{
    <p><em>@message</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Title</th>
                <th>Barcode</th>
                <th>Price</th>
                <th>Release Date</th>
                <th>Options</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Id</td>
                    <td>@product.Title</td>
                    <td>@product.Barcode</td>
                    <td>@product.Price</td>
                    <td>@product.ReleaseDate.ToShortDateString()</td>
                    <td><button class="btn btn-primary" @onclick="()=>GoToEdit(product.Id)" >Edit</button></td>
                </tr>
            }
        </tbody>
    </table>
}



@code {
    private List<Product> products;
    private string message= "Loading products...";

    protected override async Task OnInitializedAsync()
    {
        await LoadProducts();
    }
   
    private async Task LoadProducts()
    {
        var response =  await ProductService.GetProductsAsync();
        if (response.Success)
        {
            products = response.Data;
        }
        else
        {
            message = response.Message;
        }
    }

    private void GoToEdit(int id)
    {
        NavigationManager.NavigateTo($"products/editProduct/{id}");
    }


}
