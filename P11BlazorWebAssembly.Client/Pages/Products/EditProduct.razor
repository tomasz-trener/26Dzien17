@page "/products/editproduct/{Id:int}"

@inject IProductService ProductService
@inject NavigationManager NavigationManager

<h3>EditProduct</h3>

<EditForm Model="product">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="Title">Title</label>
        <InputText class="form-control" id="Title" @bind-Value="product.Title" />
    </div>
    <div class="form-group">
        <label for="Barcode">Barcode</label>
        <InputText class="form-control" id="Barcode" @bind-Value="product.Barcode" />
    </div>
    <div class="form-group">
        <label for="Price">Price</label>
        <InputNumber class="form-control" id="Price" @bind-Value="product.Price" />
    </div>
    <div class="form-group">
        <label for="ReleaseDate">Release Date</label>
        <InputDate class="form-control" id="ReleaseDate" @bind-Value="product.ReleaseDate" />
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-danger" @onclick="Cancel">Cancel</button>

</EditForm>


@code {
    [Parameter]
    public int Id { get; set; }

    private Product product;
    private string message = "Loading product...";

    protected override async Task OnInitializedAsync()
    {
        var response = await ProductService.GetProductAsync(Id);
        if (response.Success)
            product = response.Data;
        else
            message = response.Message;

    }

    void Cancel()
    {
        NavigationManager.NavigateTo("/products/productsList");
    }
}
